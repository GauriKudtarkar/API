openapi: 3.0.3
info:
  title: My first OAS
  version: '1.0'
  description: This is my first open api specification
  termsOfService: https://example.com/tos
  contact:
    email: contact@example.com
    name: Contact
    url: https://example.com/contact
  license:
    name: License
    url: https://example.com/license
paths:
  /Users:
    summary: Users related operations
    description: Fetch, create new etc...
    get:
      summary: fetch users
      description: fetch all users
      operationId: FetchUsers
      responses:
        '500':
          description: Internal Server Error
          content:
            text/plain; charset=utf-8:
              examples:
                test:
                  value: Internal Server Error
        2XX:
          $ref: '#/components/responses/userArrayResponseBody'
        default:
          description: Default success sample response
          content:
            application/json:
              examples:
                default response:
                  value: |-
                    [
                      {
                        "id": "1234abc",
                        "username": "bear",
                        "score": 55,
                        "active": true
                      },
                      {
                        "id": "qwerty",
                        "username": "jed",
                        "score": 553,
                        "active": true
                      },
                      {
                        "username": "schmeb",
                        "score": 59,
                        "active": true,
                        "id": "i1HYeyQ"
                      }
                    ]
      tags:
        - Users
    post:
      summary: create a new user
      description: Store new user on server
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      responses:
        '201':
          $ref: '#/components/responses/UserResponseBody'
        default:
          $ref: '#/components/responses/DefaultResponseBody'
      tags:
        - Users
  /users/{userId}:
    summary: get user by user id
    description: get user by user id
    get:
      summary: get user by user id
      description: get user by userid
      operationId: fetchUser
      responses:
        '201':
          $ref: '#/components/responses/UserResponseBody'
        default:
          $ref: '#/components/responses/DefaultResponseBody'
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            example: "1234"
      tags:
        - Users
servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: '3000'
        enum:
          - '3000'
          - '3001'
          - '3002'
        description: 3000:dev, 3001:test, 3002:production
    description: local mock server
  - url: https://my-json-server.typicode.com/GauriKudtarkar/API
    variables: {}
    description: mock server
components:
  responses:
    UserResponseBody:
      description: User created successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullUser'
    userArrayResponseBody:
      description: array of users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserArray'
    DefaultResponseBody:
      description: Operation performed successfully
  requestBodies:
    UserPostBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostNewUser'
      required: true
  schemas:
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: username
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
    FullUser:
      allOf:
        - $ref: '#/components/schemas/PostNewUser'
        - type: object
          properties:
            id:
              type: string
              example: 1234
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/FullUser'
